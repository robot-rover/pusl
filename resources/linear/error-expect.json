{
  "base_func": {
    "function": {
      "args": [],
      "binds": [],
      "literals": [
        {
          "String": "Stupid"
        },
        {
          "String": "a"
        },
        {
          "String": "\n"
        },
        {
          "String": "b"
        },
        {
          "String": "Wow!"
        },
        {
          "String": "Yoinking\n"
        },
        {
          "String": "Done!\n"
        },
        {
          "String": "Throwing inside function\n"
        },
        {
          "String": "Caught\n"
        },
        {
          "String": "Done2!\n"
        },
        {
          "Integer": 0
        }
      ],
      "references": [
        "error_type",
        "Object",
        "message",
        "testfn",
        "print",
        "error_inst",
        "thrown",
        "super",
        "test2",
        "root",
        "a",
        "b",
        "c"
      ],
      "catches": [
        {
          "begin": 30,
          "filter": 60,
          "yoink": 62,
          "variable_name": "thrown"
        },
        {
          "begin": 100,
          "filter": 116,
          "yoink": 118,
          "variable_name": "test2"
        }
      ],
      "code": [
        "PushReference",
        1,
        "FunctionCall",
        0,
        "AssignReference",
        0,
        true,
        "PushReference",
        0,
        "Literal",
        0,
        "AssignField",
        2,
        true,
        "PushReference",
        0,
        "PushFunction",
        0,
        "AssignField",
        3,
        true,
        "PushReference",
        4,
        "Literal",
        1,
        "Literal",
        2,
        "FunctionCall",
        2,
        "Pop",
        "PushReference",
        4,
        "Literal",
        3,
        "Literal",
        2,
        "FunctionCall",
        2,
        "Pop",
        "PushReference",
        1,
        "PushReference",
        0,
        "FunctionCall",
        1,
        "AssignReference",
        5,
        true,
        "PushReference",
        5,
        "Literal",
        4,
        "AssignField",
        2,
        true,
        "PushReference",
        5,
        "Yeet",
        "Jump",
        93,
        "PushReference",
        0,
        "PushReference",
        4,
        "Literal",
        5,
        "FunctionCall",
        1,
        "Pop",
        "PushReference",
        4,
        "PushReference",
        6,
        "FieldAccess",
        2,
        "Literal",
        2,
        "FunctionCall",
        2,
        "Pop",
        "PushReference",
        4,
        "PushReference",
        6,
        "FieldAccess",
        7,
        "FieldAccess",
        2,
        "Literal",
        2,
        "FunctionCall",
        2,
        "Pop",
        "PushReference",
        4,
        "Literal",
        6,
        "FunctionCall",
        1,
        "Pop",
        "PushReference",
        4,
        "Literal",
        7,
        "FunctionCall",
        1,
        "Pop",
        "PushReference",
        0,
        "FieldAccess",
        3,
        "FunctionCall",
        0,
        "Pop",
        "Jump",
        136,
        "PushReference",
        0,
        "PushReference",
        4,
        "Literal",
        8,
        "FunctionCall",
        1,
        "Pop",
        "PushReference",
        4,
        "PushReference",
        8,
        "FieldAccess",
        2,
        "Literal",
        2,
        "FunctionCall",
        2,
        "Pop",
        "PushReference",
        4,
        "Literal",
        9,
        "FunctionCall",
        1,
        "Pop",
        "PushReference",
        1,
        "FunctionCall",
        0,
        "AssignReference",
        9,
        true,
        "PushReference",
        9,
        "PushFunction",
        1,
        "AssignField",
        10,
        true,
        "PushReference",
        9,
        "PushFunction",
        2,
        "AssignField",
        11,
        true,
        "PushReference",
        9,
        "PushFunction",
        3,
        "AssignField",
        12,
        true,
        "PushReference",
        9,
        "FieldAccess",
        10,
        "Literal",
        10,
        "FunctionCall",
        1,
        "Pop"
      ],
      "is_generator": false
    },
    "sub_functions": [
      {
        "function": {
          "args": [],
          "binds": [
            "error_type"
          ],
          "literals": [
            {
              "String": "Inside testfn\n"
            },
            {
              "String": "Oops, didn't yeet\n"
            }
          ],
          "references": [
            "print",
            "Object",
            "error_type"
          ],
          "catches": [],
          "code": [
            "PushReference",
            0,
            "Literal",
            0,
            "FunctionCall",
            1,
            "Pop",
            "PushReference",
            1,
            "PushReference",
            2,
            "FunctionCall",
            1,
            "Yeet",
            "PushReference",
            0,
            "Literal",
            1,
            "FunctionCall",
            1,
            "Pop"
          ],
          "is_generator": false
        },
        "sub_functions": []
      },
      {
        "function": {
          "args": [
            "num"
          ],
          "binds": [
            "root"
          ],
          "literals": [
            {
              "Integer": 10
            },
            {
              "Integer": 2
            },
            {
              "Integer": 0
            },
            {
              "Integer": 1
            }
          ],
          "references": [
            "num",
            "root",
            "c",
            "b"
          ],
          "catches": [],
          "code": [
            "PushReference",
            0,
            "Literal",
            0,
            "Compare",
            "Greater",
            "ConditionalJump",
            35,
            "PushReference",
            0,
            "Literal",
            1,
            "Modulus",
            "Literal",
            2,
            "Compare",
            "Equal",
            "ConditionalJump",
            42,
            "ScopeUp",
            "PushReference",
            1,
            "FieldAccess",
            2,
            "PushReference",
            0,
            "Literal",
            3,
            "Addition",
            "FunctionCall",
            1,
            "Pop",
            "ScopeDown",
            "Jump",
            58,
            "ScopeUp",
            "PushReference",
            1,
            "Yeet",
            "ScopeDown",
            "Jump",
            58,
            "ScopeUp",
            "PushReference",
            1,
            "FieldAccess",
            3,
            "PushReference",
            0,
            "Literal",
            3,
            "Addition",
            "FunctionCall",
            1,
            "Pop",
            "ScopeDown",
            "Jump",
            58
          ],
          "is_generator": false
        },
        "sub_functions": []
      },
      {
        "function": {
          "args": [
            "num"
          ],
          "binds": [
            "root"
          ],
          "literals": [],
          "references": [
            "root",
            "a",
            "num"
          ],
          "catches": [],
          "code": [
            "PushReference",
            0,
            "FieldAccess",
            1,
            "PushReference",
            2,
            "FunctionCall",
            1,
            "Pop"
          ],
          "is_generator": false
        },
        "sub_functions": []
      },
      {
        "function": {
          "args": [
            "num"
          ],
          "binds": [
            "root"
          ],
          "literals": [],
          "references": [
            "root",
            "a",
            "num"
          ],
          "catches": [],
          "code": [
            "PushReference",
            0,
            "FieldAccess",
            1,
            "PushReference",
            2,
            "FunctionCall",
            1,
            "Pop"
          ],
          "is_generator": false
        },
        "sub_functions": []
      }
    ]
  },
  "imports": []
}